<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="XOME Suite" duration-ms="913290" started-at="2019-06-07T03:40:08Z" finished-at="2019-06-07T03:55:21Z">
    <groups>
      <group name="regression">
        <method signature="MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBath" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBed" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="mFilterKeyword" class="mobileTests.MFilterByKeyword"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterForSale" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterPending" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterSold" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterCondo" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterSingleFamily" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterTownHome" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="mFilterSqFt" class="mobileTests.MFilterBySqFt"/>
        <method signature="MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="mFilterYear" class="mobileTests.MFilterByYear"/>
        <method signature="MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="mobileLoginAndSearch" class="mobileTests.MLoginandSearch"/>
        <method signature="MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="mSignUpNewUser" class="mobileTests.MSignUp_NewUser"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBath(java.lang.String)[pri:2, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByBath" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBed(java.lang.String)[pri:1, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByBed" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByHightoLowPrice(java.lang.String)[pri:4, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByHightoLowPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByLowtoHighPrice(java.lang.String)[pri:3, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByLowtoHighPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByMostRecent(java.lang.String)[pri:6, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByMostRecent" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortBySqFt(java.lang.String)[pri:5, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortBySqFt" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBath" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBed" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="mFilterKeyword" class="mobileTests.MFilterByKeyword"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterForSale" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterPending" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterSold" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterCondo" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterSingleFamily" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterTownHome" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="mFilterSqFt" class="mobileTests.MFilterBySqFt"/>
        <method signature="MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="mFilterYear" class="mobileTests.MFilterByYear"/>
        <method signature="MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="mobileLoginAndSearch" class="mobileTests.MLoginandSearch"/>
        <method signature="MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="mSignUpNewUser" class="mobileTests.MSignUp_NewUser"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBath(java.lang.String)[pri:2, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByBath" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBed(java.lang.String)[pri:1, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByBed" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByHightoLowPrice(java.lang.String)[pri:4, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByHightoLowPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByLowtoHighPrice(java.lang.String)[pri:3, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByLowtoHighPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByMostRecent(java.lang.String)[pri:6, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortByMostRecent" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortBySqFt(java.lang.String)[pri:5, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@3590fc5b]" name="mSortBySqFt" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
      </group> <!-- smoke -->
    </groups>
    <test name="All Tests Run including Smoke and Regression" duration-ms="913290" started-at="2019-06-07T03:40:08Z" finished-at="2019-06-07T03:55:21Z">
      <class name="mobileTests.MFilterByKeyword">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="Setup" is-config="true" duration-ms="9069" started-at="2019-06-07T03:41:33Z" finished-at="2019-06-07T03:41:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="mFilterKeyword" duration-ms="53767" started-at="2019-06-07T03:41:42Z" data-provider="getMobileData" finished-at="2019-06-07T03:42:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hardwood floor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterKeyword -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T03:42:35Z" finished-at="2019-06-07T03:42:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterKeyword status=SUCCESS method=MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByKeyword@65fb9ffc]" name="tearDown" is-config="true" duration-ms="1063" started-at="2019-06-07T03:42:35Z" finished-at="2019-06-07T03:42:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByKeyword -->
      <class name="mobileTests.MFilterByBedBath">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="Setup" is-config="true" duration-ms="11781" started-at="2019-06-07T03:40:08Z" finished-at="2019-06-07T03:40:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBath" duration-ms="30609" started-at="2019-06-07T03:40:20Z" data-provider="getMobileData" finished-at="2019-06-07T03:40:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterBath -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="tearDown" is-config="true" duration-ms="1191" started-at="2019-06-07T03:40:51Z" finished-at="2019-06-07T03:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:40:51Z" finished-at="2019-06-07T03:40:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterBath status=SUCCESS method=MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="Setup" is-config="true" duration-ms="8947" started-at="2019-06-07T03:40:52Z" finished-at="2019-06-07T03:41:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="mFilterBed" duration-ms="30393" started-at="2019-06-07T03:41:01Z" data-provider="getMobileData" finished-at="2019-06-07T03:41:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterBed -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T03:41:31Z" finished-at="2019-06-07T03:41:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterBed status=SUCCESS method=MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@59474f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByBedBath@59474f18]" name="tearDown" is-config="true" duration-ms="1097" started-at="2019-06-07T03:41:31Z" finished-at="2019-06-07T03:41:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByBedBath -->
      <class name="mobileTests.MFilterByPropertyType">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="Setup" is-config="true" duration-ms="10405" started-at="2019-06-07T03:44:54Z" finished-at="2019-06-07T03:45:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterCondo" duration-ms="52494" started-at="2019-06-07T03:45:04Z" data-provider="getMobileData" finished-at="2019-06-07T03:45:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterCondo -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:45:56Z" finished-at="2019-06-07T03:45:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterCondo status=SUCCESS method=MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="tearDown" is-config="true" duration-ms="1028" started-at="2019-06-07T03:45:56Z" finished-at="2019-06-07T03:45:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="Setup" is-config="true" duration-ms="9391" started-at="2019-06-07T03:45:57Z" finished-at="2019-06-07T03:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterSingleFamily" duration-ms="52403" started-at="2019-06-07T03:46:07Z" data-provider="getMobileData" finished-at="2019-06-07T03:46:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSingleFamily -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="tearDown" is-config="true" duration-ms="1147" started-at="2019-06-07T03:46:59Z" finished-at="2019-06-07T03:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:46:59Z" finished-at="2019-06-07T03:46:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSingleFamily status=SUCCESS method=MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="Setup" is-config="true" duration-ms="9279" started-at="2019-06-07T03:47:00Z" finished-at="2019-06-07T03:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="mFilterTownHome" duration-ms="51496" started-at="2019-06-07T03:47:10Z" data-provider="getMobileData" finished-at="2019-06-07T03:48:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterTownHome -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:48:01Z" finished-at="2019-06-07T03:48:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterTownHome status=SUCCESS method=MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@1bb5a082]" name="tearDown" is-config="true" duration-ms="986" started-at="2019-06-07T03:48:01Z" finished-at="2019-06-07T03:48:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByPropertyType -->
      <class name="mobileTests.MLoginandSearch">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="Setup" is-config="true" duration-ms="9749" started-at="2019-06-07T03:53:40Z" finished-at="2019-06-07T03:53:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="mobileLoginAndSearch" duration-ms="43935" started-at="2019-06-07T03:53:50Z" data-provider="getMobileData" finished-at="2019-06-07T03:54:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sqatester2018@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Automation123#]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginAndSearch -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:54:34Z" finished-at="2019-06-07T03:54:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileLoginAndSearch status=SUCCESS method=MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@397fbdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MLoginandSearch@397fbdb]" name="tearDown" is-config="true" duration-ms="906" started-at="2019-06-07T03:54:34Z" finished-at="2019-06-07T03:54:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MLoginandSearch -->
      <class name="mobileTests.MFilterByPendingSoldForSaleStatus">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="Setup" is-config="true" duration-ms="9452" started-at="2019-06-07T03:42:37Z" finished-at="2019-06-07T03:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterForSale" duration-ms="35376" started-at="2019-06-07T03:42:46Z" data-provider="getMobileData" finished-at="2019-06-07T03:43:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterForSale -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:43:21Z" finished-at="2019-06-07T03:43:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterForSale status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="tearDown" is-config="true" duration-ms="927" started-at="2019-06-07T03:43:21Z" finished-at="2019-06-07T03:43:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="Setup" is-config="true" duration-ms="8788" started-at="2019-06-07T03:43:22Z" finished-at="2019-06-07T03:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterPending" duration-ms="35224" started-at="2019-06-07T03:43:31Z" data-provider="getMobileData" finished-at="2019-06-07T03:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterPending -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:44:06Z" finished-at="2019-06-07T03:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterPending status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="tearDown" is-config="true" duration-ms="1234" started-at="2019-06-07T03:44:06Z" finished-at="2019-06-07T03:44:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="Setup" is-config="true" duration-ms="9823" started-at="2019-06-07T03:44:08Z" finished-at="2019-06-07T03:44:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="mFilterSold" duration-ms="34910" started-at="2019-06-07T03:44:17Z" data-provider="getMobileData" finished-at="2019-06-07T03:44:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSold -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T03:44:52Z" finished-at="2019-06-07T03:44:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSold status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@3e694b3f]" name="tearDown" is-config="true" duration-ms="1144" started-at="2019-06-07T03:44:52Z" finished-at="2019-06-07T03:44:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByPendingSoldForSaleStatus -->
      <class name="mobileTests.MFilterBySqFt">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="Setup" is-config="true" duration-ms="9197" started-at="2019-06-07T03:48:02Z" finished-at="2019-06-07T03:48:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="mFilterSqFt" duration-ms="39857" started-at="2019-06-07T03:48:11Z" data-provider="getMobileData" finished-at="2019-06-07T03:48:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1500]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSqFt -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="tearDown" is-config="true" duration-ms="1015" started-at="2019-06-07T03:48:51Z" finished-at="2019-06-07T03:48:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterBySqFt@78691363]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:48:51Z" finished-at="2019-06-07T03:48:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSqFt status=SUCCESS method=MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
      </class> <!-- mobileTests.MFilterBySqFt -->
      <class name="mobileTests.MSignUp_NewUser">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="Setup" is-config="true" duration-ms="10803" started-at="2019-06-07T03:54:35Z" finished-at="2019-06-07T03:54:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="mSignUpNewUser" duration-ms="34472" started-at="2019-06-07T03:54:46Z" data-provider="getMobileData" finished-at="2019-06-07T03:55:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fowler]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sqatester2018@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Automation123#]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mSignUpNewUser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="tearDown" is-config="true" duration-ms="1002" started-at="2019-06-07T03:55:20Z" finished-at="2019-06-07T03:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:55:20Z" finished-at="2019-06-07T03:55:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mSignUpNewUser status=SUCCESS method=MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@33d512c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
      </class> <!-- mobileTests.MSignUp_NewUser -->
      <class name="mobileTests.MFilterByYear">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="Setup" is-config="true" duration-ms="9232" started-at="2019-06-07T03:48:52Z" finished-at="2019-06-07T03:49:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="mFilterYear" duration-ms="277614" started-at="2019-06-07T03:49:02Z" data-provider="getMobileData" finished-at="2019-06-07T03:53:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1995]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2015]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterYear -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T03:53:39Z" finished-at="2019-06-07T03:53:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterYear status=SUCCESS method=MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@41d477ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByYear@41d477ed]" name="tearDown" is-config="true" duration-ms="1121" started-at="2019-06-07T03:53:39Z" finished-at="2019-06-07T03:53:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByYear -->
    </test> <!-- All Tests Run including Smoke and Regression -->
  </suite> <!-- XOME Suite -->
</testng-results>
