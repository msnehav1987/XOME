<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="XOME Suite" duration-ms="709870" started-at="2019-06-07T02:41:30Z" finished-at="2019-06-07T02:53:20Z">
    <groups>
      <group name="regression">
        <method signature="MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBath" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBed" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="mFilterKeyword" class="mobileTests.MFilterByKeyword"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterForSale" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterPending" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterSold" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterCondo" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterSingleFamily" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterTownHome" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="mFilterSqFt" class="mobileTests.MFilterBySqFt"/>
        <method signature="MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="mFilterYear" class="mobileTests.MFilterByYear"/>
        <method signature="MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="mobileLoginAndSearch" class="mobileTests.MLoginandSearch"/>
        <method signature="MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="mSignUpNewUser" class="mobileTests.MSignUp_NewUser"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBath(java.lang.String)[pri:2, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByBath" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBed(java.lang.String)[pri:1, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByBed" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByHightoLowPrice(java.lang.String)[pri:4, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByHightoLowPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByLowtoHighPrice(java.lang.String)[pri:3, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByLowtoHighPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByMostRecent(java.lang.String)[pri:6, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByMostRecent" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortBySqFt(java.lang.String)[pri:5, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortBySqFt" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBath" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBed" class="mobileTests.MFilterByBedBath"/>
        <method signature="MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="mFilterKeyword" class="mobileTests.MFilterByKeyword"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterForSale" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterPending" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterSold" class="mobileTests.MFilterByPendingSoldForSaleStatus"/>
        <method signature="MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterCondo" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterSingleFamily" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterTownHome" class="mobileTests.MFilterByPropertyType"/>
        <method signature="MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="mFilterSqFt" class="mobileTests.MFilterBySqFt"/>
        <method signature="MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="mFilterYear" class="mobileTests.MFilterByYear"/>
        <method signature="MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="mobileLoginAndSearch" class="mobileTests.MLoginandSearch"/>
        <method signature="MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="mSignUpNewUser" class="mobileTests.MSignUp_NewUser"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBath(java.lang.String)[pri:2, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByBath" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByBed(java.lang.String)[pri:1, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByBed" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByHightoLowPrice(java.lang.String)[pri:4, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByHightoLowPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByLowtoHighPrice(java.lang.String)[pri:3, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByLowtoHighPrice" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortByMostRecent(java.lang.String)[pri:6, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortByMostRecent" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
        <method signature="MSortResultsByBedBathPriceSqFtMostRecent.mSortBySqFt(java.lang.String)[pri:5, instance:mobileTests.MSortResultsByBedBathPriceSqFtMostRecent@158a8276]" name="mSortBySqFt" class="mobileTests.MSortResultsByBedBathPriceSqFtMostRecent"/>
      </group> <!-- smoke -->
    </groups>
    <test name="All Tests Run including Smoke and Regression" duration-ms="709870" started-at="2019-06-07T02:41:30Z" finished-at="2019-06-07T02:53:20Z">
      <class name="mobileTests.MFilterByKeyword">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="Setup" is-config="true" duration-ms="8165" started-at="2019-06-07T02:42:53Z" finished-at="2019-06-07T02:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="mFilterKeyword" duration-ms="52619" started-at="2019-06-07T02:43:02Z" data-provider="getMobileData" finished-at="2019-06-07T02:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hardwood floor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterKeyword -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:43:54Z" finished-at="2019-06-07T02:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterKeyword status=SUCCESS method=MFilterByKeyword.mFilterKeyword(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByKeyword@bccb269] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByKeyword@bccb269]" name="tearDown" is-config="true" duration-ms="1015" started-at="2019-06-07T02:43:54Z" finished-at="2019-06-07T02:43:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByKeyword -->
      <class name="mobileTests.MFilterByBedBath">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="Setup" is-config="true" duration-ms="9611" started-at="2019-06-07T02:41:31Z" finished-at="2019-06-07T02:41:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBath" duration-ms="30485" started-at="2019-06-07T02:41:40Z" data-provider="getMobileData" finished-at="2019-06-07T02:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterBath -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T02:42:11Z" finished-at="2019-06-07T02:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterBath status=SUCCESS method=MFilterByBedBath.mFilterBath(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="tearDown" is-config="true" duration-ms="805" started-at="2019-06-07T02:42:11Z" finished-at="2019-06-07T02:42:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="Setup" is-config="true" duration-ms="8279" started-at="2019-06-07T02:42:12Z" finished-at="2019-06-07T02:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="mFilterBed" duration-ms="32404" started-at="2019-06-07T02:42:20Z" data-provider="getMobileData" finished-at="2019-06-07T02:42:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterBed -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:42:53Z" finished-at="2019-06-07T02:42:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterBed status=SUCCESS method=MFilterByBedBath.mFilterBed(java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByBedBath@66d18979] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByBedBath@66d18979]" name="tearDown" is-config="true" duration-ms="928" started-at="2019-06-07T02:42:53Z" finished-at="2019-06-07T02:42:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByBedBath -->
      <class name="mobileTests.MFilterByPropertyType">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="Setup" is-config="true" duration-ms="8189" started-at="2019-06-07T02:46:10Z" finished-at="2019-06-07T02:46:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterCondo" duration-ms="52514" started-at="2019-06-07T02:46:18Z" data-provider="getMobileData" finished-at="2019-06-07T02:47:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterCondo -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:47:10Z" finished-at="2019-06-07T02:47:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterCondo status=SUCCESS method=MFilterByPropertyType.mFilterCondo(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="tearDown" is-config="true" duration-ms="839" started-at="2019-06-07T02:47:10Z" finished-at="2019-06-07T02:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="Setup" is-config="true" duration-ms="9759" started-at="2019-06-07T02:47:11Z" finished-at="2019-06-07T02:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterSingleFamily" duration-ms="52355" started-at="2019-06-07T02:47:21Z" data-provider="getMobileData" finished-at="2019-06-07T02:48:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSingleFamily -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:48:13Z" finished-at="2019-06-07T02:48:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSingleFamily status=SUCCESS method=MFilterByPropertyType.mFilterSingleFamily(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="tearDown" is-config="true" duration-ms="957" started-at="2019-06-07T02:48:13Z" finished-at="2019-06-07T02:48:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="Setup" is-config="true" duration-ms="8021" started-at="2019-06-07T02:48:14Z" finished-at="2019-06-07T02:48:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="mFilterTownHome" duration-ms="51936" started-at="2019-06-07T02:48:22Z" data-provider="getMobileData" finished-at="2019-06-07T02:49:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterTownHome -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T02:49:14Z" finished-at="2019-06-07T02:49:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterTownHome status=SUCCESS method=MFilterByPropertyType.mFilterTownHome(java.lang.String)[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPropertyType@17f7cd29]" name="tearDown" is-config="true" duration-ms="1035" started-at="2019-06-07T02:49:14Z" finished-at="2019-06-07T02:49:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByPropertyType -->
      <class name="mobileTests.MLoginandSearch">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="Setup" is-config="true" duration-ms="8068" started-at="2019-06-07T02:51:42Z" finished-at="2019-06-07T02:51:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="mobileLoginAndSearch" duration-ms="44981" started-at="2019-06-07T02:51:50Z" data-provider="getMobileData" finished-at="2019-06-07T02:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sqatester2018@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Automation123#]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginAndSearch -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T02:52:35Z" finished-at="2019-06-07T02:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileLoginAndSearch status=SUCCESS method=MLoginandSearch.mobileLoginAndSearch(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MLoginandSearch@3c3d9b6b]" name="tearDown" is-config="true" duration-ms="1057" started-at="2019-06-07T02:52:35Z" finished-at="2019-06-07T02:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MLoginandSearch -->
      <class name="mobileTests.MFilterByPendingSoldForSaleStatus">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="Setup" is-config="true" duration-ms="8176" started-at="2019-06-07T02:43:55Z" finished-at="2019-06-07T02:44:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterForSale" duration-ms="35768" started-at="2019-06-07T02:44:04Z" data-provider="getMobileData" finished-at="2019-06-07T02:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterForSale -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="tearDown" is-config="true" duration-ms="1269" started-at="2019-06-07T02:44:39Z" finished-at="2019-06-07T02:44:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:44:39Z" finished-at="2019-06-07T02:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterForSale status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterForSale(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="Setup" is-config="true" duration-ms="7969" started-at="2019-06-07T02:44:41Z" finished-at="2019-06-07T02:44:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterPending" duration-ms="34787" started-at="2019-06-07T02:44:49Z" data-provider="getMobileData" finished-at="2019-06-07T02:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterPending -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="tearDown" is-config="true" duration-ms="1132" started-at="2019-06-07T02:45:23Z" finished-at="2019-06-07T02:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:45:23Z" finished-at="2019-06-07T02:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterPending status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterPending(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="Setup" is-config="true" duration-ms="8196" started-at="2019-06-07T02:45:25Z" finished-at="2019-06-07T02:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="mFilterSold" duration-ms="35539" started-at="2019-06-07T02:45:33Z" data-provider="getMobileData" finished-at="2019-06-07T02:46:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSold -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:46:08Z" finished-at="2019-06-07T02:46:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSold status=SUCCESS method=MFilterByPendingSoldForSaleStatus.mFilterSold(java.lang.String)[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByPendingSoldForSaleStatus@609cd4d8]" name="tearDown" is-config="true" duration-ms="1280" started-at="2019-06-07T02:46:08Z" finished-at="2019-06-07T02:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterByPendingSoldForSaleStatus -->
      <class name="mobileTests.MFilterBySqFt">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="Setup" is-config="true" duration-ms="8128" started-at="2019-06-07T02:49:15Z" finished-at="2019-06-07T02:49:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="mFilterSqFt" duration-ms="40814" started-at="2019-06-07T02:49:23Z" data-provider="getMobileData" finished-at="2019-06-07T02:50:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1500]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterSqFt -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:50:04Z" finished-at="2019-06-07T02:50:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterSqFt status=SUCCESS method=MFilterBySqFt.mFilterSqFt(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterBySqFt@7d8704ef]" name="tearDown" is-config="true" duration-ms="1077" started-at="2019-06-07T02:50:04Z" finished-at="2019-06-07T02:50:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MFilterBySqFt -->
      <class name="mobileTests.MSignUp_NewUser">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="Setup" is-config="true" duration-ms="8213" started-at="2019-06-07T02:52:36Z" finished-at="2019-06-07T02:52:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="mSignUpNewUser" duration-ms="34711" started-at="2019-06-07T02:52:45Z" data-provider="getMobileData" finished-at="2019-06-07T02:53:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fowler]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sqatester2018@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Automation123#]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mSignUpNewUser -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="OnFailure" is-config="true" duration-ms="1" started-at="2019-06-07T02:53:19Z" finished-at="2019-06-07T02:53:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mSignUpNewUser status=SUCCESS method=MSignUp_NewUser.mSignUpNewUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MSignUp_NewUser@79d8407f]" name="tearDown" is-config="true" duration-ms="1015" started-at="2019-06-07T02:53:19Z" finished-at="2019-06-07T02:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mobileTests.MSignUp_NewUser -->
      <class name="mobileTests.MFilterByYear">
        <test-method status="PASS" signature="Setup()[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="Setup" is-config="true" duration-ms="8287" started-at="2019-06-07T02:50:05Z" finished-at="2019-06-07T02:50:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="mFilterYear" duration-ms="87545" started-at="2019-06-07T02:50:14Z" data-provider="getMobileData" finished-at="2019-06-07T02:51:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Irvine, CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1995]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2015]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mFilterYear -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="tearDown" is-config="true" duration-ms="921" started-at="2019-06-07T02:51:41Z" finished-at="2019-06-07T02:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="OnFailure(org.testng.ITestResult)[pri:0, instance:mobileTests.MFilterByYear@13b6aecc]" name="OnFailure" is-config="true" duration-ms="0" started-at="2019-06-07T02:51:41Z" finished-at="2019-06-07T02:51:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mFilterYear status=SUCCESS method=MFilterByYear.mFilterYear(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:mobileTests.MFilterByYear@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnFailure -->
      </class> <!-- mobileTests.MFilterByYear -->
    </test> <!-- All Tests Run including Smoke and Regression -->
  </suite> <!-- XOME Suite -->
</testng-results>
